// Jest Snapshot v1, https://goo.gl/fbAQLP


exports[`Animal form is form invalid when empty 1`] = `
FormControl {
  "_onChange": Array [],
  "_onCollectionChange": [Function],
  "_onDisabledChange": Array [],
  "_parent": FormGroup {
    "_onCollectionChange": [Function],
    "_onDisabledChange": Array [],
    "asyncValidator": null,
    "controls": Object {
      "animalName": [Circular],
      "animalType": FormGroup {
        "_onCollectionChange": [Function],
        "_onDisabledChange": Array [],
        "_parent": [Circular],
        "asyncValidator": null,
        "controls": Object {
          "typeKey": FormControl {
            "_onChange": Array [],
            "_onCollectionChange": [Function],
            "_onDisabledChange": Array [],
            "_parent": [Circular],
            "_pendingValue": null,
            "asyncValidator": null,
            "errors": null,
            "pristine": true,
            "status": "VALID",
            "statusChanges": EventEmitter {
              "__isAsync": false,
              "_isScalar": false,
              "closed": false,
              "hasError": false,
              "isStopped": false,
              "observers": Array [],
              "thrownError": null,
            },
            "touched": false,
            "validator": null,
            "value": null,
            "valueChanges": EventEmitter {
              "__isAsync": false,
              "_isScalar": false,
              "closed": false,
              "hasError": false,
              "isStopped": false,
              "observers": Array [],
              "thrownError": null,
            },
          },
          "typeLabel": FormControl {
            "_onChange": Array [],
            "_onCollectionChange": [Function],
            "_onDisabledChange": Array [],
            "_parent": [Circular],
            "_pendingValue": "",
            "asyncValidator": null,
            "errors": Object {
              "required": true,
            },
            "pristine": true,
            "status": "INVALID",
            "statusChanges": EventEmitter {
              "__isAsync": false,
              "_isScalar": false,
              "closed": false,
              "hasError": false,
              "isStopped": false,
              "observers": Array [],
              "thrownError": null,
            },
            "touched": false,
            "validator": [Function],
            "value": "",
            "valueChanges": EventEmitter {
              "__isAsync": false,
              "_isScalar": false,
              "closed": false,
              "hasError": false,
              "isStopped": false,
              "observers": Array [],
              "thrownError": null,
            },
          },
        },
        "errors": null,
        "pristine": true,
        "status": "INVALID",
        "statusChanges": EventEmitter {
          "__isAsync": false,
          "_isScalar": false,
          "closed": false,
          "hasError": false,
          "isStopped": false,
          "observers": Array [],
          "thrownError": null,
        },
        "touched": false,
        "validator": null,
        "value": Object {
          "typeKey": null,
          "typeLabel": "",
        },
        "valueChanges": EventEmitter {
          "__isAsync": false,
          "_isScalar": false,
          "closed": false,
          "hasError": false,
          "isStopped": false,
          "observers": Array [],
          "thrownError": null,
        },
      },
    },
    "errors": null,
    "pristine": true,
    "status": "INVALID",
    "statusChanges": EventEmitter {
      "__isAsync": false,
      "_isScalar": false,
      "closed": false,
      "hasError": false,
      "isStopped": false,
      "observers": Array [],
      "thrownError": null,
    },
    "touched": false,
    "validator": null,
    "value": Object {
      "animalName": null,
      "animalType": Object {
        "typeKey": null,
        "typeLabel": "",
      },
    },
    "valueChanges": EventEmitter {
      "__isAsync": false,
      "_isScalar": false,
      "closed": false,
      "hasError": false,
      "isStopped": false,
      "observers": Array [],
      "thrownError": null,
    },
  },
  "_pendingValue": null,
  "asyncValidator": null,
  "errors": Object {
    "required": true,
  },
  "pristine": true,
  "status": "INVALID",
  "statusChanges": EventEmitter {
    "__isAsync": false,
    "_isScalar": false,
    "closed": false,
    "hasError": false,
    "isStopped": false,
    "observers": Array [],
    "thrownError": null,
  },
  "touched": false,
  "validator": [Function],
  "value": null,
  "valueChanges": EventEmitter {
    "__isAsync": false,
    "_isScalar": false,
    "closed": false,
    "hasError": false,
    "isStopped": false,
    "observers": Array [],
    "thrownError": null,
  },
}
`;
